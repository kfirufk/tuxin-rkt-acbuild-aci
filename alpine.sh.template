#!/usr/bin/env bash
set -e
GPG_KEY="<KEY>"

if [ "$EUID" -ne 0 ]; then
    echo "This script uses functionality which requires root privileges"
    exit 1
fi
PATH=/home/core/bin:$PATH
rm serviio-1.0-linux-amd64.aci* || echo "old aci image not found"

# Start the build with an empty ACI
acbuild --debug begin

# In the event of the script exiting, end the build
acbuildEnd() {
    export EXIT=$?
    acbuild --debug end && exit $EXIT 
}
trap acbuildEnd EXIT

# Name the ACI
acbuild --debug set-name tux-in.com/serviio
acbuild --debug label add version 0.1
acbuild --debug label add arch amd64
acbuild --debug label add os linux

# Based on alpine
acbuild --debug dep add quay.io/coreos/alpine-sh

acbuild --debug run -- apk update
acbuild --debug run -- apk add bash wget
acbuild --debug run -- apk --no-cache add ca-certificates
#acbuild --debug run -- wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub
acbuild --debug copy-to-dir glibc-pub/sgerrand.rsa.pub /etc/apk/keys/
acbuild --debug run -- wget --no-check-certificate https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk
acbuild --debug run -- apk add glibc-2.23-r3.apk
acbuild --debug run -- apk info -a glibc
acbuild --debug copy-to-dir serviio /opt
acbuild --debug copy-to-dir jre1.8.0_102 /opt

acbuild --debug port add serviio tcp 8895

#acbuild --debug mount add html /usr/share/nginx/html

acbuild --debug environment add JAVA_HOME /opt/jre1.8.0_102

#acbuild --debug set-exec -- /opt/serviio/bin/serviio.sh
acbuild --debug set-exec ldd -- /opt/jre1.8.0_102/bin/java

# Save the ACI
acbuild --debug write --overwrite serviio-1.0-linux-amd64.aci

#rkt trust --prefix tux-in.com ./gpg/pubkeys.gpg
#gpg --no-default-keyring \
#--secret-keyring ./gpg/rkt.sec \
#--keyring ./gpg/rkt.pub \
#--edit-key $GPG_KEY \
#trust
#gpg --no-default-keyring --armor \
#--secret-keyring ./gpg/rkt.sec --keyring ./gpg/rkt.pub \
#--output serviio-1.0-linux-amd64.aci.asc \
#--detach-sig serviio-1.0-linux-amd64.aci
rkt --debug --insecure-options=image run ./serviio-1.0-linux-amd64.aci
